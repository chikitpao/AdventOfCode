addi 4 16 4_  => ip = 16 (+1) => jump to 17 (intialization)
seti 1 8 1_  => r[1] = 1
seti 1 3 5_  => r[5] = 1
mulr 1 5 3_  => r[3] = r[1] * r[5] 
eqrr 3 2 3_  => r[3] = (r[3] == r[2]) ? 1 : 0
addr 3 4 4_  => ip += r[3] (+1) => r[3] ? skip next instr : next instr
addi 4 1 4_  => ip += 1 (+1) => skip next instr
addr 1 0 0_  => r[0] += r[1] => r[0] accumulates factors of r[2] (10.551.376), inclusive 1 and 10.551.376
addi 5 1 5_  => r[5]++
gtrr 5 2 3_  => r[3] = (r[5] > r[2]) ? 1: 0
addr 4 3 4_  => ip = 10 + r[3] (+1) => r[3] ? skip next instr : next instr
seti 2 2 4_  => ip = 2 (+1) => jump to 3
addi 1 1 1_  => r[1]++
gtrr 1 2 3_  => r[3] = (r[1] > r[2]) ? 1 : 0
addr 3 4 4_  => ip += r[3] (+1) => r[3] ? skip next instr : next instr
seti 1 4 4_  => ip = 1 (+1) => jump to 2
mulr 4 4 4_  => ip = 16 * 16 (+1) => exit program
addi 2 2 2_  => r[2] += 2
mulr 2 2 2_  => r[2] = r[2] * r[2]
mulr 4 2 2_  => r[2] *= 19
muli 2 11 2_ => r[2] *= 11 => r[2] = 2 * 2 * 19 * 11
addi 3 6 3_  => r[3] += 6 
mulr 3 4 3_  => r[3] *= 22
addi 3 8 3_  => r[3] += 8 => r[3] = (6 * 22 + 8)
addr 2 3 2_  => r[2] += r[3] => r[2] = (2 * 2 * 19 * 11) + (6 * 22 + 8) = 976
addr 4 0 4_  => ip += r[0] (+1) => part 1: next, part 2: skip next instr
seti 0 1 4_  => ip = 0 (+1) => jump to 1
setr 4 4 3_  => r[3] = 27
mulr 3 4 3_  => r[3] *= 28
addr 4 3 3_  => r[3] += 29
mulr 4 3 3_  => r[3] *= 30
muli 3 14 3_ => r[3] *= 14
mulr 3 4 3_  => r[3] *= 32 => r[3] = (27 * 28 + 29) * 30 * 14 * 32 = 10.550.400
addr 2 3 2_  => r[2] += r[3] => r[2] = 10.551.376
seti 0 4 0_  => r[0] = 0
seti 0 7 4_  => ip = 0 (+1) => jump to 1
